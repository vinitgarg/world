pipeline{
           agent any
           tools{
                   maven 'Maven'
                  }
             stages {
             
                    stage("Code Checkout") {
                                steps {
                                       git url: 'https://github.com/vinitgarg/world.git'
                                      }
                                     }
             
             
                      stage("Build Stage"){
                         steps{
                                 bat 'mvn package'
                                 
                                 }
                        }
                       stage('Compile Stage')
                       {
                           steps{
                                   bat 'mvn clean compile'
                                 }
                        }         
                                 
                         stage('Testing Stage')
                         {
                             steps{
                                     bat 'mvn test'
                                  }
                            }
                    
                          stage('Build & SonarQube Analysis')
                          {
                              steps{
                                     withSonarQubeEnv('Sonarqube')
                                     {
                                     bat 'mvn clean package sonar:sonar'        
                    
                                       }
                                  }
                             }
                             
                             stage('Artifact Deploy'){
                                         steps{
                                      rtServer (id: 'artifactory',url: 'http://localhost:8040/artifactory',username: 'admin',password: 'nardev.k1')
                                      rtUpload (serverId: 'artifactory',spec: '''{"files": [{ "pattern": "/**.war","target": "maven_artifact/"}]}''')
                                      }
                                     }
                             }
                           
                     }
                        
                              
                            
        
                                
